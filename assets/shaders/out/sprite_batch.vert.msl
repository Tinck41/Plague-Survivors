#include <metal_stdlib>
#include <simd/simd.h>

using namespace metal;

struct type_UniformBlock
{
    float4x4 view_proj;
};

struct Input
{
    uint vertex_id;
    float4 position;
    float4 rotation;
    float4 scale;
    float4 color;
    float2 uv;
    float2 size;
};

struct Output
{
    float4 position;
    float4 color;
    float2 uv;
};

struct main0_out
{
    float4 out_var_TEXCOORD0 [[user(locn0)]];
    float2 out_var_TEXCOORD1 [[user(locn1)]];
    float4 gl_Position [[position]];
};

struct main0_in
{
    float4 in_var_TEXCOORD0 [[attribute(0)]];
    float4 in_var_TEXCOORD1 [[attribute(1)]];
    float4 in_var_TEXCOORD2 [[attribute(2)]];
    float4 in_var_TEXCOORD3 [[attribute(3)]];
    float2 in_var_TEXCOORD4 [[attribute(4)]];
    float2 in_var_TEXCOORD5 [[attribute(5)]];
};

vertex main0_out main0(main0_in in [[stage_in]], constant type_UniformBlock& UniformBlock [[buffer(0)]], uint gl_VertexIndex [[vertex_id]])
{
    main0_out out = {};
    uint _69 = gl_VertexIndex;
    float4 _68 = in.in_var_TEXCOORD0;
    float4 _67 = in.in_var_TEXCOORD1;
    float4 _66 = in.in_var_TEXCOORD2;
    float4 _65 = in.in_var_TEXCOORD3;
    float2 _64 = in.in_var_TEXCOORD4;
    float2 _63 = in.in_var_TEXCOORD5;
    bool _78 = true;
    bool _102;
    if (!(gl_VertexIndex == 0u))
    {
        bool _101 = gl_VertexIndex == 5u;
        _78 = _101;
        _102 = _101;
    }
    else
    {
        _102 = true;
    }
    int _77;
    int _121;
    if (_102)
    {
        _77 = 0;
        _121 = 0;
    }
    else
    {
        bool _80 = true;
        bool _111;
        if (!(gl_VertexIndex == 1u))
        {
            bool _110 = gl_VertexIndex == 2u;
            _80 = _110;
            _111 = _110;
        }
        else
        {
            _111 = true;
        }
        int _79;
        int _120;
        if (_111)
        {
            _79 = 1;
            _120 = 1;
        }
        else
        {
            bool _115 = gl_VertexIndex == 3u;
            int _81;
            if (_115)
            {
                _81 = 2;
            }
            else
            {
                _81 = 3;
            }
            int _119 = _115 ? 2 : 3;
            _79 = _119;
            _120 = _119;
        }
        _77 = _120;
        _121 = _120;
    }
    uint _122 = uint(_121);
    uint _76 = _122;
    float2 _127 = float2(float(_122 & 1u), float(_122 >> 1u));
    float2 _82 = _127;
    float2 _129 = in.in_var_TEXCOORD4 + (_127 * in.in_var_TEXCOORD5);
    float2 _83 = _129;
    float _132 = cos(in.in_var_TEXCOORD1.z);
    float _84 = _132;
    float _133 = sin(in.in_var_TEXCOORD1.z);
    float _85 = _133;
    float2x2 _137 = float2x2(float2(_132, _133), float2(-_133, _132));
    float2x2 _86 = _137;
    float2 _140 = _137 * (_127 * in.in_var_TEXCOORD2.xy);
    float2 _87 = _140;
    float2 _142 = _140 + in.in_var_TEXCOORD0.xy;
    float _145 = _142.x;
    float3 _88 = float3(_145, _142.y, in.in_var_TEXCOORD0.z);
    float4 _151 = UniformBlock.view_proj * float4(_145, _142.y, in.in_var_TEXCOORD0.z, 1.0);
    float4 _75 = _151;
    float4 _74 = in.in_var_TEXCOORD3;
    float2 _73 = _129;
    float4 _72 = _151;
    float4 _71 = in.in_var_TEXCOORD3;
    float2 _70 = _129;
    out.gl_Position = _151;
    out.out_var_TEXCOORD0 = in.in_var_TEXCOORD3;
    out.out_var_TEXCOORD1 = _129;
    return out;
}


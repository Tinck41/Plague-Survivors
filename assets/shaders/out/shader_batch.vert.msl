#pragma clang diagnostic ignored "-Wmissing-prototypes"
#pragma clang diagnostic ignored "-Wmissing-braces"

#include <metal_stdlib>
#include <simd/simd.h>

using namespace metal;

template<typename T, size_t Num>
struct spvUnsafeArray
{
    T elements[Num ? Num : 1];
    
    thread T& operator [] (size_t pos) thread
    {
        return elements[pos];
    }
    constexpr const thread T& operator [] (size_t pos) const thread
    {
        return elements[pos];
    }
    
    device T& operator [] (size_t pos) device
    {
        return elements[pos];
    }
    constexpr const device T& operator [] (size_t pos) const device
    {
        return elements[pos];
    }
    
    constexpr const constant T& operator [] (size_t pos) const constant
    {
        return elements[pos];
    }
    
    threadgroup T& operator [] (size_t pos) threadgroup
    {
        return elements[pos];
    }
    constexpr const threadgroup T& operator [] (size_t pos) const threadgroup
    {
        return elements[pos];
    }
};

struct SpriteInstance
{
    float4 position;
    float4 rotation;
    float4 scale;
    float4 color;
    float2 uv;
    float2 size;
};

struct type_StructuredBuffer_SpriteInstance
{
    SpriteInstance _m0[1];
};

struct type_UniformBlock
{
    float4x4 view_proj;
};

struct Output
{
    float4 position;
    float4 color;
    float2 uv;
};

struct SpriteInstance_1
{
    float4 position;
    float4 rotation;
    float4 scale;
    float4 color;
    float2 uv;
    float2 size;
};

constant spvUnsafeArray<uint, 6> _65 = spvUnsafeArray<uint, 6>({ 0u, 1u, 2u, 2u, 3u, 0u });
constant spvUnsafeArray<float2, 4> _70 = spvUnsafeArray<float2, 4>({ float2(0.0, 1.0), float2(1.0), float2(1.0, 0.0), float2(0.0) });

struct main0_out
{
    float4 out_var_TEXCOORD0 [[user(locn0)]];
    float2 out_var_TEXCOORD1 [[user(locn1)]];
    float4 gl_Position [[position]];
};

vertex main0_out main0(constant type_UniformBlock& UniformBlock [[buffer(0)]], const device type_StructuredBuffer_SpriteInstance& InstanceBuffer [[buffer(1)]], uint gl_VertexIndex [[vertex_id]])
{
    main0_out out = {};
    uint _92 = gl_VertexIndex;
    uint _94 = gl_VertexIndex / 6u;
    uint _84 = _94;
    uint _95 = gl_VertexIndex % 6u;
    uint _85 = _65[_95];
    float4 _83 = InstanceBuffer._m0[_94].position;
    float4 _82 = InstanceBuffer._m0[_94].rotation;
    float4 _81 = InstanceBuffer._m0[_94].scale;
    float4 _80 = InstanceBuffer._m0[_94].color;
    float2 _79 = InstanceBuffer._m0[_94].uv;
    float2 _78 = InstanceBuffer._m0[_94].size;
    spvUnsafeArray<float2, 4> _131 = spvUnsafeArray<float2, 4>({ float2(_79.x, _79.y + _78.y), float2(_79.x + _78.x, _79.y + _78.y), float2(_79.x + _78.x, _79.y), float2(_79.x, _79.y) });
    spvUnsafeArray<float2, 4> _86 = _131;
    float _134 = cos(_82.z);
    float _87 = _134;
    float _136 = sin(_82.z);
    float _88 = _136;
    float2 _89 = _70[_65[_95]];
    float2 _140 = _70[_65[_95]] * InstanceBuffer._m0[_94].scale.xy;
    _89 = _140;
    float2x2 _144 = float2x2(float2(_134, _136), float2(-_136, _134));
    float2x2 _90 = _144;
    float2 _145 = _144 * _140;
    _89 = _145;
    float2 _148 = _145 + _83.xy;
    float _151 = _148.x;
    float3 _91 = float3(_151, _148.y, _83.z);
    float4 _157 = UniformBlock.view_proj * float4(_151, _148.y, _83.z, 1.0);
    float4 _77 = _157;
    float4 _76 = InstanceBuffer._m0[_94].color;
    float2 _75 = _86[_65[_95]];
    float4 _74 = _157;
    float4 _73 = InstanceBuffer._m0[_94].color;
    float2 _72 = _86[_65[_95]];
    out.gl_Position = _157;
    out.out_var_TEXCOORD0 = InstanceBuffer._m0[_94].color;
    out.out_var_TEXCOORD1 = _86[_65[_95]];
    return out;
}

